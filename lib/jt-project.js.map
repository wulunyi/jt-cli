{"version":3,"sources":["../src/jt-project.js"],"names":["createProject","util","name","inPlace","process","cwd","split","sep","pop","mkdir","chdir","cwdPath","curPath","__dirname","packagePath","join","isFile","isDir","error","template","pkg","readFile","JSON","parse","dependencies","devDependencies","eslintDeps","concat","writeFile","stringify","files","getFiles","filter","file","copyFn","sourcePath","target","fileContent","replace","forEach","cmd","cmdDev","execCmd","then","catch"],"mappings":"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","file":"jt-project.js","sourcesContent":["import path from 'path';\nimport _ from 'lodash';\nimport {\n  log,\n  warn\n} from './log';\nimport * as util from './util';\n\nexport default function createProject(name) {\n  let inPlace = !name || name === '.';\n\n  if (inPlace) {\n    name = process.cwd().split(path.sep).pop();\n    log('使用当前目录：' + name);\n  } else {\n    log('目录：' + name, '创建');\n\n    if (util.mkdir(name) !== true) {\n      return warn('创建目录失败。');\n    }\n\n    process.chdir(name);\n  }\n\n  let cwdPath = process.cwd();\n  let curPath = __dirname;\n\n  // 判断当前是否是一个项目\n  let packagePath = path.join(cwdPath, 'package.json');\n\n  if (util.isFile(packagePath) || util.isDir(path.join(cwdPath, 'src'))) {\n    util.error('目录不为空, 请请勿重复初始化', '错误');\n    return;\n  }\n\n  // 保存基础路径\n  let template = path.join(curPath, '../template/project', path.sep);\n\n  let pkg = path.join(template, 'package.json');\n\n  pkg = util.readFile(pkg);\n  pkg = JSON.parse(pkg);\n  pkg.name = name;\n\n  let dependencies = [\n    'wepy',\n    \"lodash\",\n    'clone',\n    \"promise-polyfill\",\n    \"wepy-async-function\"\n  ];\n\n  let devDependencies = [\n    'wepy-compiler-babel',\n    \"wepy-compiler-less\",\n    \"wepy-compiler-pug\",\n    \"wepy-compiler-sass\",\n    \"wepy-plugin-imagemin\",\n    \"wepy-plugin-uglifyjs\",\n    'wepy-plugin-autoprefixer',\n    'babel-plugin-transform-decorators-legacy',\n    'babel-plugin-syntax-export-extensions',\n    'babel-plugin-transform-export-extensions',\n    'babel-plugin-transform-class-properties',\n    'babel-plugin-transform-object-rest-spread',\n    'babel-preset-env',\n    'cross-env'\n  ];\n\n  const eslintDeps = [\n    'eslint@3.18.0',\n    'babel-eslint@7.2.1',\n    'eslint-config-standard@7.1.0',\n    'eslint-friendly-formatter@2.0.7',\n    'eslint-plugin-html@2.0.1',\n    'eslint-plugin-promise@3.5.0',\n    'eslint-plugin-standard@2.0.1',\n    'wepy-eslint'\n  ];\n\n  // 添加检查依赖\n  devDependencies = devDependencies.concat(eslintDeps);\n\n  util.writeFile(packagePath, JSON.stringify(pkg));\n  log('配置: ' + 'package.json', '写入');\n\n  let files = util.getFiles(template).filter(file => file !== 'package.json');\n\n  const copyFn = function (sourcePath) {\n    return function (file) {\n      let target = path.join(cwdPath, file);\n\n      let fileContent = util.readFile(path.join(sourcePath, file));\n\n      if (file === 'wepy.config.js') {\n        fileContent = fileContent.replace(/\\s*eslint\\: true,/ig, '')\n      }\n\n      util.writeFile(target, fileContent);\n      log('文件: ' + file, '拷贝');\n    }\n  }\n\n  files.forEach(copyFn(template));\n\n  let cmd = 'npm install --save ' + dependencies.join(' ');\n  let cmdDev = 'npm install --save-dev ' + devDependencies.join(' ');\n\n  log('执行命令: ' + cmd, '执行');\n  log('执行命令: ' + cmdDev, '执行');\n  log('可能需要几分钟, 请耐心等待...', '信息');\n\n  // 不能并行执行安装依赖\n  util.execCmd(cmd).then(d => {\n    return util.execCmd(cmdDev)\n  }).then(d => {\n    log('安装依赖完成', '完成');\n\n    let cmd = 'wepy build';\n\n    log('执行命令: ' + cmd, '执行');\n    log('可能需要几分钟, 请耐心等待...', '信息');\n\n    util.execCmd(cmd).then(d => {\n      log('代码编译完成', '完成');\n      log('项目初始化完成, 可以开始使用小程序。', '完成');\n    }).catch(e => {\n      warn('代码编译出错', '错误');\n    })\n  }).catch(e => {\n    warn('安装依赖出错', '错误');\n  });\n};"]}