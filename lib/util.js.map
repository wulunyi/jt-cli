{"version":3,"sources":["../src/util.js"],"names":["isFileExit","camelName","mkdir","isFile","isDir","readFile","writeFile","getFiles","execCmd","getModifiedTime","unlink","filePath","isString","existsSync","name","pascal","rst","mkdirSync","e","p","join","dir","base","statSync","isDirectory","readFileSync","data","opath","parse","sync","writeFileSync","process","cwd","prefix","cfiles","getFileList","normalize","files","readdirSync","forEach","item","filepath","sep","stat","push","concat","setFileList","cmd","quite","Promise","resolve","reject","fcmd","err","stdout","stderr","on","chunk","write","mtime","unlinkSync"],"mappings":";;;;;;;;QAcgBA,U,GAAAA,U;QAQAC,S,GAAAA,S;QAIAC,K,GAAAA,K;QAYAC,M,GAAAA,M;QAUAC,K,GAAAA,K;QAQAC,Q,GAAAA,Q;QAcAC,S,GAAAA,S;QAUAC,Q,GAAAA,Q;QA8BAC,O,GAAAA,O;QAkBAC,e,GAAAA,e;QAIAC,M,GAAAA,M;;AApIhB;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;AAIA;;;;AACA;;AAGA;;;;;;AAEO,SAASV,UAAT,CAAoBW,QAApB,EAA8B;AACnC,MAAI,iBAAEC,QAAF,CAAWD,QAAX,CAAJ,EAA0B;AACxB,WAAO,aAAGE,UAAH,CAAcF,QAAd,CAAP;AACD,GAFD,MAEO;AACL,WAAO,KAAP;AACD;AACF;;AAEM,SAASV,SAAT,CAAmBa,IAAnB,EAAyB;AAC9B,SAAO,eAAKC,MAAL,CAAYD,IAAZ,CAAP;AACD;;AAEM,SAASZ,KAAT,CAAeY,IAAf,EAAqB;AAC1B,MAAIE,MAAM,IAAV;;AAEA,MAAI;AACF,iBAAGC,SAAH,CAAaH,IAAb;AACD,GAFD,CAEE,OAAOI,CAAP,EAAU;AACVF,UAAME,CAAN;AACD;;AAED,SAAOF,GAAP;AACD;;AAEM,SAASb,MAAT,CAAgBgB,CAAhB,EAAmB;AACxBA,MAAK,QAAQA,CAAR,yCAAQA,CAAR,OAAe,QAAhB,GAA4B,eAAKC,IAAL,CAAUD,EAAEE,GAAZ,EAAiBF,EAAEG,IAAnB,CAA5B,GAAuDH,CAA3D;;AAEA,MAAI,CAAC,aAAGN,UAAH,CAAcM,CAAd,CAAL,EAAuB;AACrB,WAAO,KAAP;AACD;;AAED,SAAO,aAAGI,QAAH,CAAYJ,CAAZ,EAAehB,MAAf,EAAP;AACD;;AAEM,SAASC,KAAT,CAAee,CAAf,EAAkB;AACvB,MAAI,CAAC,aAAGN,UAAH,CAAcM,CAAd,CAAL,EAAuB;AACrB,WAAO,KAAP;AACD;;AAED,SAAO,aAAGI,QAAH,CAAYJ,CAAZ,EAAeK,WAAf,EAAP;AACD;;AAEM,SAASnB,QAAT,CAAkBc,CAAlB,EAAqB;AAC1B,MAAIH,MAAM,EAAV;;AAEAG,MAAK,QAAQA,CAAR,yCAAQA,CAAR,OAAe,QAAhB,GAA4B,eAAKC,IAAL,CAAUD,EAAEE,GAAZ,EAAiBF,EAAEG,IAAnB,CAA5B,GAAuDH,CAA3D;;AAEA,MAAI;AACFH,UAAM,aAAGS,YAAH,CAAgBN,CAAhB,EAAmB,OAAnB,CAAN;AACD,GAFD,CAEE,OAAOD,CAAP,EAAU;AACVF,UAAM,IAAN;AACD;;AAED,SAAOA,GAAP;AACD;;AAEM,SAASV,SAAT,CAAmBa,CAAnB,EAAsBO,IAAtB,EAA4B;AACjC,MAAIC,QAAS,iBAAEf,QAAF,CAAWO,CAAX,IAAgB,eAAKS,KAAL,CAAWT,CAAX,CAAhB,GAAgCA,CAA7C;;AAEA,MAAI,CAACf,MAAMuB,MAAMN,GAAZ,CAAL,EAAuB;AACrB,qBAAOQ,IAAP,CAAYF,MAAMN,GAAlB;AACD;;AAED,eAAGS,aAAH,CAAiBX,CAAjB,EAAoBO,IAApB;AACD;;AAEM,SAASnB,QAAT,GAAoD;AAAA,MAAlCc,GAAkC,uEAA5BU,QAAQC,GAAR,EAA4B;AAAA,MAAbC,MAAa,uEAAJ,EAAI;;AACzD,MAAIC,SAAS,gBAAMC,WAAN,CAAkBd,GAAlB,CAAb;;AAEA,MAAIa,MAAJ,EACE,OAAOA,MAAP;;AAEFb,QAAM,eAAKe,SAAL,CAAef,GAAf,CAAN;;AAEA,MAAI,CAAC,aAAGR,UAAH,CAAcQ,GAAd,CAAL,EAAyB;AACvB,WAAO,EAAP;AACD;;AAED,MAAIgB,QAAQ,aAAGC,WAAH,CAAejB,GAAf,CAAZ;AACA,MAAIL,MAAM,EAAV;;AAEAqB,QAAME,OAAN,CAAc,UAACC,IAAD,EAAU;AACtB,QAAIC,WAAWpB,MAAM,eAAKqB,GAAX,GAAiBF,IAAhC;AACA,QAAIG,OAAO,aAAGpB,QAAH,CAAYkB,QAAZ,CAAX;;AAEA,QAAIE,KAAKxC,MAAL,EAAJ,EAAmB;AACjBa,UAAI4B,IAAJ,CAASX,SAASO,IAAlB;AACD,KAFD,MAEO,IAAIG,KAAKnB,WAAL,EAAJ,EAAwB;AAC7BR,YAAMA,IAAI6B,MAAJ,CAAWtC,SAAS,eAAK6B,SAAL,CAAef,MAAM,eAAKqB,GAAX,GAAiBF,IAAhC,CAAT,EAAgD,eAAKJ,SAAL,CAAeH,SAASO,IAAT,GAAgB,eAAKE,GAApC,CAAhD,CAAX,CAAN;AACD;AACF,GATD;;AAWA,kBAAMI,WAAN,CAAkBzB,GAAlB,EAAuBL,GAAvB;AACA,SAAOA,GAAP;AACD;;AAEM,SAASR,OAAT,CAAiBuC,GAAjB,EAAsBC,KAAtB,EAA6B;AAClC,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAIC,OAAO,yBAAKL,GAAL,EAAU,UAACM,GAAD,EAAMC,MAAN,EAAcC,MAAd,EAAyB;AAC5C,UAAIF,GAAJ,EAAS;AACPF,eAAOE,GAAP;AACD,OAFD,MAEO;AACLH,gBAAQI,MAAR,EAAgBC,MAAhB;AACD;AACF,KANU,CAAX;AAOAH,SAAKE,MAAL,CAAYE,EAAZ,CAAe,MAAf,EAAuB,UAACC,KAAD,EAAW;AAChC,OAACT,KAAD,IAAUjB,QAAQuB,MAAR,CAAeI,KAAf,CAAqBD,KAArB,CAAV;AACD,KAFD;AAGAL,SAAKG,MAAL,CAAYC,EAAZ,CAAe,MAAf,EAAuB,UAACC,KAAD,EAAW;AAChC,OAACT,KAAD,IAAUjB,QAAQuB,MAAR,CAAeI,KAAf,CAAqBD,KAArB,CAAV;AACD,KAFD;AAGD,GAdM,CAAP;AAeD;;AAEM,SAAShD,eAAT,CAAyBU,CAAzB,EAA4B;AACjC,SAAOhB,OAAOgB,CAAP,IAAY,CAAC,aAAGI,QAAH,CAAYJ,CAAZ,EAAewC,KAA5B,GAAoC,KAA3C;AACD;;AAEM,SAASjD,MAAT,CAAgBS,CAAhB,EAAmB;AACxB,MAAIH,MAAM,EAAV;AACAG,MAAK,QAAQA,CAAR,yCAAQA,CAAR,OAAe,QAAhB,GAA4B,eAAKC,IAAL,CAAUD,EAAEE,GAAZ,EAAiBF,EAAEG,IAAnB,CAA5B,GAAuDH,CAA3D;AACA,MAAI;AACFH,UAAM,aAAG4C,UAAH,CAAczC,CAAd,CAAN;AACD,GAFD,CAEE,OAAOD,CAAP,EAAU;AACVF,UAAM,IAAN;AACD;AACD,SAAOA,GAAP;AACD","file":"util.js","sourcesContent":["import fs from 'fs';\nimport _ from 'lodash';\nimport path from 'path';\nimport mkdirp from 'mkdirp';\nimport {\n  log,\n  warn\n} from './log';\nimport Case from 'case';\nimport {\n  exec\n} from 'child_process';\nimport cache from './cache';\n\nexport function isFileExit(filePath) {\n  if (_.isString(filePath)) {\n    return fs.existsSync(filePath);\n  } else {\n    return false;\n  }\n}\n\nexport function camelName(name) {\n  return Case.pascal(name);\n}\n\nexport function mkdir(name) {\n  let rst = true;\n\n  try {\n    fs.mkdirSync(name);\n  } catch (e) {\n    rst = e;\n  }\n\n  return rst;\n}\n\nexport function isFile(p) {\n  p = (typeof (p) === 'object') ? path.join(p.dir, p.base) : p;\n\n  if (!fs.existsSync(p)) {\n    return false;\n  }\n\n  return fs.statSync(p).isFile();\n}\n\nexport function isDir(p) {\n  if (!fs.existsSync(p)) {\n    return false;\n  }\n\n  return fs.statSync(p).isDirectory();\n}\n\nexport function readFile(p) {\n  let rst = '';\n\n  p = (typeof (p) === 'object') ? path.join(p.dir, p.base) : p;\n\n  try {\n    rst = fs.readFileSync(p, 'utf-8');\n  } catch (e) {\n    rst = null;\n  }\n\n  return rst;\n}\n\nexport function writeFile(p, data) {\n  let opath = (_.isString(p) ? path.parse(p) : p);\n\n  if (!isDir(opath.dir)) {\n    mkdirp.sync(opath.dir);\n  }\n\n  fs.writeFileSync(p, data);\n}\n\nexport function getFiles(dir = process.cwd(), prefix = '') {\n  let cfiles = cache.getFileList(dir);\n\n  if (cfiles)\n    return cfiles;\n\n  dir = path.normalize(dir);\n\n  if (!fs.existsSync(dir)) {\n    return [];\n  }\n\n  let files = fs.readdirSync(dir);\n  let rst = [];\n\n  files.forEach((item) => {\n    let filepath = dir + path.sep + item;\n    let stat = fs.statSync(filepath);\n\n    if (stat.isFile()) {\n      rst.push(prefix + item);\n    } else if (stat.isDirectory()) {\n      rst = rst.concat(getFiles(path.normalize(dir + path.sep + item), path.normalize(prefix + item + path.sep)));\n    }\n  });\n\n  cache.setFileList(dir, rst);\n  return rst;\n}\n\nexport function execCmd(cmd, quite) {\n  return new Promise((resolve, reject) => {\n    let fcmd = exec(cmd, (err, stdout, stderr) => {\n      if (err) {\n        reject(err);\n      } else {\n        resolve(stdout, stderr);\n      }\n    });\n    fcmd.stdout.on('data', (chunk) => {\n      !quite && process.stdout.write(chunk);\n    });\n    fcmd.stderr.on('data', (chunk) => {\n      !quite && process.stdout.write(chunk);\n    });\n  });\n}\n\nexport function getModifiedTime(p) {\n  return isFile(p) ? +fs.statSync(p).mtime : false;\n}\n\nexport function unlink(p) {\n  let rst = '';\n  p = (typeof (p) === 'object') ? path.join(p.dir, p.base) : p;\n  try {\n    rst = fs.unlinkSync(p);\n  } catch (e) {\n    rst = null;\n  }\n  return rst;\n}"]}