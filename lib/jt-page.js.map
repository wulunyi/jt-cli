{"version":3,"sources":["../src/jt-page.js"],"names":["createPage","cwdPath","process","cwd","curPath","__dirname","pageName","filePath","resolve","src","pipe","basename","extname","dest","exitDC","exitBM","exitWarmPng","error"],"mappings":";;;;;QAkBgBA,U,GAAAA,U;;AAlBhB;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;AAIA;;;;AAKA,IAAIC,UAAUC,QAAQC,GAAR,EAAd;AACA,IAAIC,UAAUC,SAAd;;AAEO,SAASL,UAAT,CAAoBM,QAApB,EAA8B;AACnC,MAAIC,WAAW,eAAKC,OAAL,CAAaP,OAAb,iBAAmCK,QAAnC,CAAf;;AAEA,MAAI,sBAAWC,QAAX,CAAJ,EAA0B;AACxB,kBAAIA,QAAJ;AACA,WAAO,uCAAYD,QAAZ,6DAAP;AACD;;AAED,MAAI;AACF,kBAAI,aAAJ;;AAEA,mBAAKG,GAAL,CAAS,eAAKD,OAAL,CAAaJ,OAAb,EAAsB,yBAAtB,CAAT,EACGM,IADH,CACQ,2BAAQ,QAAR,EAAkB,qBAAUJ,QAAV,CAAlB,CADR,EAEGI,IAFH,CAEQ,2BAAQ,YAAR,EAAsBJ,QAAtB,CAFR,EAGGI,IAHH,CAGQ,0BAAO;AACXC,gBAAUL,QADC;AAEXM,eAAS;AAFE,KAAP,CAHR,EAOGF,IAPH,CAOQ,eAAKG,IAAL,CAAUN,QAAV,CAPR;;AASA,kBAAI,cAAJ;;AAEA,mBAAKE,GAAL,CAAS,eAAKD,OAAL,CAAaJ,OAAb,EAAsB,0BAAtB,CAAT,EACGM,IADH,CACQ,0BAAO;AACXC,gBAAUL,QADC;AAEXM,eAAS;AAFE,KAAP,CADR,EAKGF,IALH,CAKQ,eAAKG,IAAL,CAAUN,QAAV,CALR;;AAOA,kBAAI,cAAJ;;AAEA,mBAAKE,GAAL,CAAS,eAAKD,OAAL,CAAaJ,OAAb,EAAsB,0BAAtB,CAAT,EACGM,IADH,CACQ,eAAKG,IAAL,CAAUN,QAAV,CADR;;AAGA;AACA,QAAIO,SAAS,sBAAW,eAAKN,OAAL,CAAaP,OAAb,EAAsB,2BAAtB,CAAX,CAAb;AACA;AACA,QAAIc,SAAS,sBAAW,eAAKP,OAAL,CAAaP,OAAb,EAAsB,iCAAtB,CAAX,CAAb;AACA;AACA,QAAIe,cAAc,sBAAW,eAAKR,OAAL,CAAaP,OAAb,EAAsB,4BAAtB,CAAX,CAAlB;;AAEA,QAAI,CAACa,MAAL,EAAa;AACX,oBAAI,UAAJ;AACA,qBAAKL,GAAL,CAAS,eAAKD,OAAL,CAAaJ,OAAb,EAAsB,iCAAtB,CAAT,EACGM,IADH,CACQ,eAAKG,IAAL,CAAU,eAAKL,OAAL,CAAaP,OAAb,EAAsB,aAAtB,CAAV,CADR;AAED;;AAED,QAAI,CAACc,MAAL,EAAa;AACX,oBAAI,UAAJ;AACA,qBAAKN,GAAL,CAAS,eAAKD,OAAL,CAAaJ,OAAb,EAAsB,uCAAtB,CAAT,EACGM,IADH,CACQ,eAAKG,IAAL,CAAU,eAAKL,OAAL,CAAaP,OAAb,EAAsB,cAAtB,CAAV,CADR;AAED;;AAED,QAAI,CAACe,WAAL,EAAkB;AAChB,oBAAI,UAAJ;AACA,qBAAKP,GAAL,CAAS,eAAKD,OAAL,CAAaJ,OAAb,EAAsB,kCAAtB,CAAT,EACGM,IADH,CACQ,eAAKG,IAAL,CAAU,eAAKL,OAAL,CAAaP,OAAb,EAAsB,cAAtB,CAAV,CADR;AAED;;AAED,kBAAI,MAAJ;AACA,6BAAaK,QAAb,SAAyBA,QAAzB;AACD,GArDD,CAqDE,OAAOW,KAAP,EAAc;AACd,mBAAK,MAAL;AACA,mBAAKA,KAAL;AACD;AACF","file":"jt-page.js","sourcesContent":["import _ from 'lodash';\nimport gulp from 'gulp';\nimport fs from 'fs';\nimport path from 'path';\nimport replace from 'gulp-replace';\nimport rename from 'gulp-rename';\nimport {\n  log,\n  warn\n} from './log';\nimport {\n  isFileExit,\n  camelName\n} from './util';\n\nlet cwdPath = process.cwd();\nlet curPath = __dirname;\n\nexport function createPage(pageName) {\n  let filePath = path.resolve(cwdPath, `src/pages/${pageName}`);\n\n  if (isFileExit(filePath)) {\n    log(filePath);\n    return warn(`页面名 ${pageName} 已经被占用，请更换`);\n  }\n\n  try {\n    log('正在拷贝 wpy 文件');\n\n    gulp.src(path.resolve(curPath, '../template/page/tp.wpy'))\n      .pipe(replace('TpPage', camelName(pageName)))\n      .pipe(replace('<fileName>', pageName))\n      .pipe(rename({\n        basename: pageName,\n        extname: '.wpy'\n      }))\n      .pipe(gulp.dest(filePath));\n\n    log('正在拷贝 scss 文件');\n\n    gulp.src(path.resolve(curPath, '../template/page/tp.scss'))\n      .pipe(rename({\n        basename: pageName,\n        extname: '.scss'\n      }))\n      .pipe(gulp.dest(filePath));\n\n    log('正在拷贝 data 文件');\n\n    gulp.src(path.resolve(curPath, '../template/page/data.js'))\n      .pipe(gulp.dest(filePath));\n\n    // 是否存在深拷贝函数\n    let exitDC = isFileExit(path.resolve(cwdPath, './src/utils/deep-clone.js'));\n    // 是否存在基础扩展\n    let exitBM = isFileExit(path.resolve(cwdPath, './src/mixins/page-base-mixin.js'));\n    // 是否存在图片\n    let exitWarmPng = isFileExit(path.resolve(cwdPath, './src/images/warm-icon.png'));\n\n    if (!exitDC) {\n      log('正在拷贝依赖文件');\n      gulp.src(path.resolve(curPath, '../template/utils/deep-clone.js'))\n        .pipe(gulp.dest(path.resolve(cwdPath, './src/utils')));\n    }\n\n    if (!exitBM) {\n      log('正在拷贝依赖文件');\n      gulp.src(path.resolve(curPath, '../template/mixins/page-base-mixin.js'))\n        .pipe(gulp.dest(path.resolve(cwdPath, './src/mixins')));\n    }\n\n    if (!exitWarmPng) {\n      log('正在拷贝依赖文件');\n      gulp.src(path.resolve(curPath, '../template/images/warm-icon.png'))\n        .pipe(gulp.dest(path.resolve(cwdPath, './src/images')));\n    }\n\n    log('创建完成');\n    log(`pages/${pageName}/${pageName}`)\n  } catch (error) {\n    warn('创建失败');\n    warn(error);\n  }\n}"]}